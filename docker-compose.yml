version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: teddy_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - teddy-network

  teddy-api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      NODE_OPTIONS: ''
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: teddy_db
      JWT_SECRET: super-secret-jwt-key-for-teddy-test-minimum-32-chars
      JWT_EXPIRES_IN: 1d
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - teddy-network
    restart: unless-stopped
    command: ./entrypoint.sh

volumes:
  postgres_data:
  node_modules:

networks:
  teddy-network:
    driver: bridge
